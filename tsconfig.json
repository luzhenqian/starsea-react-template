{
  "compilerOptions": {
    // "outDir": "dist", // 打包构建输出的目录
    "module": "ESNext", // 指定生成哪个模块系统代码
    "target": "ESNext", // 指定ECMAScript目标版本
    "lib": ["esnext", "dom"], // 编译过程中需要引入的库文件的列表
    "sourceMap": true, // TypeScript以将内联源映射输出到已编译的JavaScript文件，便于调试
    "allowJs": true, // 允许编译javascript文件
    "jsx": "react", // 在 .tsx文件里支持JSX
    "moduleResolution": "node", // 决定如何处理模块
    "rootDirs": ["src"], // 根（root）文件夹列表
    "baseUrl": ".", // 解析非相对模块名的基准目录。
    "forceConsistentCasingInFileNames": true, // 禁止对同一个文件的不一致的引用
    "noImplicitReturns": true, // 不是函数的所有返回路径都有返回值时报错
    "noImplicitThis": true, // 当 this表达式的值为 any类型的时候，生成一个错误
    "noImplicitAny": true, // 启用所有严格类型检查选项
    "strictNullChecks": true, // 在严格的 null检查模式下， null和 undefined 值不包含在任何类型里，只允许用它们自己和 any来赋值
    "suppressImplicitAnyIndexErrors": true, // 阻止 --noImplicitAny 对缺少索引签名的索引对象报错
    "noUnusedLocals": true, // 若有未使用的局部变量则抛错
    // "declaration": true, // 生成相应的 .d.ts 文件 (不能和 allowJs 同时存在)
    // esModuleInterop 和 allowSyntheticDefaultImports 决定可以使用 import React from 'react' 的语法
    // 而不是必须使用 import * as React from 'react'
    "esModuleInterop": true,
    "allowSyntheticDefaultImports": true, // 允许从没有设置默认导出的模块中默认导入
    "experimentalDecorators": true, // 启用实验性的ES装饰器
    "emitDecoratorMetadata": true, // 给源码里的装饰器声明加上设计类型元数据
    // "types": ["styled-components"],
    // 模块名到基于 baseUrl的路径映射的列表
    "paths": {
      "@pages/*": ["./src/pages/*"],
      "@images/*": ["./src/assets/images/*"],
      "@components/*": ["./src/components/*"],
      "@utils/*": ["./src/utils/*"],
      "@api/*": ["./src/api/*"],
      "@actions": ["./src/redux/actions"],
      "@reducers/*": ["./src/redux/reducers/*"],
      "@config/*": ["./src/config/*"],
      "@url": ["./mocks/api"]
    }
  },
  "include": ["src"], // 要打包的目标文件列表
  "exclude": ["node_modules", "build", "mocks", "dist"] // 不要打包的文件列表
}
